! function(s, a) {
    s.fn.yith_wccl = function() {
        var t = this,
            e = (t.data("last_change"), t.find(".variations select"));
        return this.clean = function() {
            return t.find(".select_box").remove(), this
        }, this.generateOutput = function() {
            return e.each(function() {
                var a = s(this),
                    i = s(this).data("type"),
                    c = s("<div />", {
                        "class": "select_box_" + i + " select_box " + a.attr("name")
                    }).insertAfter(a);
                a.removeData("last_content"), a.find("option").each(function() {
                    var t, e, n;
                    s(this).data("value") && (n = "select_option_" + i + " select_option", t = s(this).data("value"), e = s(this), n = s("<div/>", {
                        "class": n
                    }).data("value", s(this).attr("value")).data("option", e.clone(!0)).appendTo(c).off("click").on("click", function(t) {
                        s(this).hasClass("selected") ? a.val("").change() : (t.preventDefault(), a.val(e.val()).change())
                    }), "colorpicker" == i ? n.append(s("<span/>", {
                        css: {
                            background: t
                        }
                    })) : "image" == i ? n.append(s("<img/>", {
                        src: t
                    })) : "label" == i && n.append(s("<span/>", {
                        text: t
                    })))
                })
            }).filter(function() {
                return "select" != s(this).data("type")
            }).hide(), t
        }, this.onSelect = function() {
            return e.each(function() {
                var t = s(this).val(),
                    e = (e = (e = s(this).next(".select_box")).length ? e : s(this).siblings(".select_box")).find(".select_option").removeClass("selected");
                t && e.filter(function() {
                    return s(this).data("value") == t
                }).addClass("selected")
            }), t
        }, this.updateOptions = function() {
            return "undefined" != typeof yith_wccl_arg && t.find(".variations select").each(function(t, e) {
                var n = s(this),
                    a = n.val(),
                    i = n.data("active_options") ? n.data("active_options") : n.data("attribute_options");
                if (!i) return !1;
                "" != a ? s.each(i, function(t, e) {
                    n.append(e)
                }) : n.data("active_options", n.find("option").get())
            }), t
        }, this.updateOptions().clean().generateOutput().onSelect()
    }, jQuery(function(t) {
        var e = t(".variations_form"),
            n = e.find(".variations select");
        t(a).on("yith_wccl_change check_variations", e, function() {
            t(this).yith_wccl()
        }).trigger("yith_wccl_change"), t(a).on("change", n, function() {
            e.data("last_change", t(this).attr("name")), t(this).data("last_content", t(this).siblings(".select_box").clone(!0))
        }), t(a).on("click", ".reset_variations", function() {
            n.removeData("last_content"), e.removeData("last_change")
        }), n.trigger("focusin")
    })
}(jQuery, (window, document));